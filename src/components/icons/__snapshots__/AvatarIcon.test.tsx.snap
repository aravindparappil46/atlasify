// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/icons/AvatarIcon.tsx should render default extra small icon when no url 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        aria-hidden="true"
        class="css-1wits42"
        data-vc="icon-undefined"
        style="--icon-primary-color: currentColor; --icon-secondary-color: var(--ds-surface, #FFFFFF);"
      >
        <svg
          height="24"
          role="presentation"
          viewBox="0 0 24 24"
          width="24"
        >
          <g
            fill-rule="evenodd"
          >
            <circle
              cx="12"
              cy="12"
              fill="currentcolor"
              r="10"
            />
            <circle
              cx="12"
              cy="9"
              fill="inherit"
              r="3"
            />
            <path
              d="M7 18.245A7.97 7.97 0 0 0 12 20c1.892 0 3.63-.657 5-1.755V15c0-1.115-.895-2-2-2H9c-1.113 0-2 .895-2 2z"
              fill="inherit"
              fill-rule="nonzero"
            />
          </g>
        </svg>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      aria-hidden="true"
      class="css-1wits42"
      data-vc="icon-undefined"
      style="--icon-primary-color: currentColor; --icon-secondary-color: var(--ds-surface, #FFFFFF);"
    >
      <svg
        height="24"
        role="presentation"
        viewBox="0 0 24 24"
        width="24"
      >
        <g
          fill-rule="evenodd"
        >
          <circle
            cx="12"
            cy="12"
            fill="currentcolor"
            r="10"
          />
          <circle
            cx="12"
            cy="9"
            fill="inherit"
            r="3"
          />
          <path
            d="M7 18.245A7.97 7.97 0 0 0 12 20c1.892 0 3.63-.657 5-1.755V15c0-1.115-.895-2-2-2H9c-1.113 0-2 .895-2 2z"
            fill="inherit"
            fill-rule="nonzero"
          />
        </g>
      </svg>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`components/icons/AvatarIcon.tsx should render default medium icon when no url 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        aria-hidden="true"
        class="css-1afrefi"
        data-vc="icon-undefined"
        style="--icon-primary-color: currentColor; --icon-secondary-color: var(--ds-surface, #FFFFFF);"
      >
        <svg
          height="24"
          role="presentation"
          viewBox="0 0 24 24"
          width="24"
        >
          <g
            fill-rule="evenodd"
          >
            <circle
              cx="12"
              cy="12"
              fill="currentcolor"
              r="10"
            />
            <circle
              cx="12"
              cy="9"
              fill="inherit"
              r="3"
            />
            <path
              d="M7 18.245A7.97 7.97 0 0 0 12 20c1.892 0 3.63-.657 5-1.755V15c0-1.115-.895-2-2-2H9c-1.113 0-2 .895-2 2z"
              fill="inherit"
              fill-rule="nonzero"
            />
          </g>
        </svg>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      aria-hidden="true"
      class="css-1afrefi"
      data-vc="icon-undefined"
      style="--icon-primary-color: currentColor; --icon-secondary-color: var(--ds-surface, #FFFFFF);"
    >
      <svg
        height="24"
        role="presentation"
        viewBox="0 0 24 24"
        width="24"
      >
        <g
          fill-rule="evenodd"
        >
          <circle
            cx="12"
            cy="12"
            fill="currentcolor"
            r="10"
          />
          <circle
            cx="12"
            cy="9"
            fill="inherit"
            r="3"
          />
          <path
            d="M7 18.245A7.97 7.97 0 0 0 12 20c1.892 0 3.63-.657 5-1.755V15c0-1.115-.895-2-2-2H9c-1.113 0-2 .895-2 2z"
            fill="inherit"
            fill-rule="nonzero"
          />
        </g>
      </svg>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`components/icons/AvatarIcon.tsx should render default small icon when no url 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        aria-hidden="true"
        class="css-1wits42"
        data-vc="icon-undefined"
        style="--icon-primary-color: currentColor; --icon-secondary-color: var(--ds-surface, #FFFFFF);"
      >
        <svg
          height="24"
          role="presentation"
          viewBox="0 0 24 24"
          width="24"
        >
          <g
            fill-rule="evenodd"
          >
            <circle
              cx="12"
              cy="12"
              fill="currentcolor"
              r="10"
            />
            <circle
              cx="12"
              cy="9"
              fill="inherit"
              r="3"
            />
            <path
              d="M7 18.245A7.97 7.97 0 0 0 12 20c1.892 0 3.63-.657 5-1.755V15c0-1.115-.895-2-2-2H9c-1.113 0-2 .895-2 2z"
              fill="inherit"
              fill-rule="nonzero"
            />
          </g>
        </svg>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      aria-hidden="true"
      class="css-1wits42"
      data-vc="icon-undefined"
      style="--icon-primary-color: currentColor; --icon-secondary-color: var(--ds-surface, #FFFFFF);"
    >
      <svg
        height="24"
        role="presentation"
        viewBox="0 0 24 24"
        width="24"
      >
        <g
          fill-rule="evenodd"
        >
          <circle
            cx="12"
            cy="12"
            fill="currentcolor"
            r="10"
          />
          <circle
            cx="12"
            cy="9"
            fill="inherit"
            r="3"
          />
          <path
            d="M7 18.245A7.97 7.97 0 0 0 12 20c1.892 0 3.63-.657 5-1.755V15c0-1.115-.895-2-2-2H9c-1.113 0-2 .895-2 2z"
            fill="inherit"
            fill-rule="nonzero"
          />
        </g>
      </svg>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`components/icons/AvatarIcon.tsx should render extra small avatar 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <img
        alt="test's avatar"
        class="rounded-full object-cover size-4"
        src="https://avatars.githubusercontent.com/u/583231?v=4"
      />
    </div>
  </body>,
  "container": <div>
    <img
      alt="test's avatar"
      class="rounded-full object-cover size-4"
      src="https://avatars.githubusercontent.com/u/583231?v=4"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`components/icons/AvatarIcon.tsx should render medium avatar 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <img
        alt="test's avatar"
        class="rounded-full object-cover size-6"
        src="https://avatars.githubusercontent.com/u/583231?v=4"
      />
    </div>
  </body>,
  "container": <div>
    <img
      alt="test's avatar"
      class="rounded-full object-cover size-6"
      src="https://avatars.githubusercontent.com/u/583231?v=4"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`components/icons/AvatarIcon.tsx should render small avatar 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <img
        alt="test's avatar"
        class="rounded-full object-cover size-5"
        src="https://avatars.githubusercontent.com/u/583231?v=4"
      />
    </div>
  </body>,
  "container": <div>
    <img
      alt="test's avatar"
      class="rounded-full object-cover size-5"
      src="https://avatars.githubusercontent.com/u/583231?v=4"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
